{"version":3,"sources":["components/Navbar.jsx","components/Filter/FilterForm.jsx","components/Pagination/Pagination.jsx","components/Items/EachItem.jsx","components/Filter/FilterQuery.jsx","components/Items/ItemsQuery.jsx","components/Game/GameInfo.jsx","components/Game/TheGame.jsx","components/Released/ReleasedReview.jsx","components/Released/ReleasedQuery.jsx","App.js","index.js"],"names":["Navbar","setPage","setFilter","setUrlName","pageArray","setRelease","setNameComps","className","type","data-toggle","data-target","aria-expanded","id","to","onClick","i","FilterForm","filter","history","useHistory","location","useLocation","redir","f","push","classNames","row","pathname","onSubmit","e","preventDefault","placeholder","value","onChange","target","aria-hidden","Pagination","count","name","page","nameComps","filterUrl","maxPage","Math","round","floor","finalPage","startFinalPage","onPage","p","temp","undefined","map","idx","key","EachItem","data","game","src","background_image","alt","Date","released","toDateString","substring","rating","FILTER_QUERY","gql","FilterQuery","num","String","toUpperCase","query","variables","loading","error","console","log","results","PAGE_QUERY","ItemsQuery","GameInfo","playStationArr","xboxArr","updatedDate","updated","releasedDate","toLocaleString","indexOf","clip","controls","genres","g","platforms","platform","includes","reviews_count","website","href","reddit_url","developers","d","publishers","description_raw","THEGAME_QUERY","TheGame","props","queryId","parseInt","match","params","ReleasedReview","release","sliceData","slice","indicators","data-slide-to","data-ride","role","data-slide","RELEASED_QUERY","ReleasedQuery","today","date","getDate","month","getMonth","year","getFullYear","from","padStart","client","ApolloClient","uri","App","useState","urlName","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e6d57f4.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nconst Navbar = ({ setPage, setFilter, setUrlName, pageArray, setRelease, setNameComps }) => {\n  const resetState = () => {\n    setPage(1);\n    setFilter(\"\");\n    setUrlName(\"\");\n    setRelease(0);\n    setNameComps(\"\");\n    for (let i = 0; i < 10; i++) {\n      pageArray[i] = i + 1;\n    }\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark nav-bg\">\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarToggler\"\n        aria-expanded=\"false\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse hLine\" id=\"navbarToggler\">\n        <ul className=\"navbar-nav nav-justified mr-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/\" onClick={resetState}>\n              <span className=\"text-color\">Home</span> <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n          {/* <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/\">\n              About <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li> */}\n        </ul>\n        {/* <ul className=\"navbar-nav justify-content-end\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"#\">\n              Right <span className=\"sr-only\">(current)</span>\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"#\">\n              Login <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n        </ul> */}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport \"./Filter.css\";\n\nconst FilterForm = ({\n  setUrlName,\n  pageArray,\n  setPage,\n  filter,\n  setFilter,\n  setRelease,\n  setNameComps,\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const redir = (f) => {\n    setPage(1);\n    setUrlName(\"\");\n    setFilter(\"\");\n    for (let i = 0; i < 10; i++) {\n      pageArray[i] = i + 1;\n    }\n    if (f === 1) history.push(`/games/1/`);\n    else if (f === 2) {\n      setRelease(1);\n      setNameComps(\"released\");\n      history.push(`/games/new/1/`);\n    }\n  };\n\n  const newFilter = (e) => {\n    e.preventDefault();\n    setPage(1);\n    setUrlName(filter);\n    setFilter(\"\");\n    setNameComps(\"\");\n    for (let i = 0; i < 10; i++) {\n      pageArray[i] = i + 1;\n    }\n    history.push(`/games/1/search=${filter}`);\n  };\n\n  return (\n    <>\n      <div\n        className={classNames({\n          row: location.pathname === \"/\",\n          \"\": location.pathname !== \"/\",\n        })}\n      >\n        <div\n          className={classNames({\n            \"col-2\": location.pathname === \"/\",\n            \"\": location.pathname !== \"/\",\n          })}\n        ></div>\n        <div\n          className={classNames({\n            \"col-8\": location.pathname === \"/\",\n            \"\": location.pathname !== \"/\",\n          })}\n        >\n          <div className=\"form-row\">\n            <div className=\"form-group col-md-8\">\n              <span className=\"btn btn-outline-info btn-sm\" onClick={() => redir(1)}>\n                Browse Games\n              </span>\n              {location.pathname !== \"/\" ? (\n                <span className=\"btn btn-outline-info btn-sm\" onClick={() => redir(2)}>\n                  Recent Released\n                </span>\n              ) : (\n                <></>\n              )}\n            </div>\n            <div className=\"form-group col-md-4\">\n              <form onSubmit={newFilter} className=\"input-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Search...\"\n                  value={filter}\n                  onChange={changeFilter}\n                ></input>\n                <div className=\"input-group-append\">\n                  <button className=\"form-control filter-icon\" type=\"submit\">\n                    <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div\n          className={classNames({\n            \"col-2\": location.pathname === \"/\",\n            \"\": location.pathname !== \"/\",\n          })}\n        ></div>\n      </div>\n    </>\n  );\n};\n\nexport default FilterForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport \"./Pages.css\";\n\nconst Pagination = ({ count, name, page, setPage, pageArray, nameComps }) => {\n  let filterUrl = `search=${name}`;\n  let maxPage = Math.round(Math.floor(count / 20)) + 1;\n  if (maxPage < 10) {\n    pageArray = [];\n    for (let i = 0; i < maxPage; i++) {\n      pageArray[i] = i + 1;\n    }\n  }\n  let finalPage = maxPage - 4;\n  let startFinalPage = maxPage - 9;\n\n  const onPage = (p) => {\n    if (p === -2) {\n      p = page - 1;\n    } else if (p === -1) {\n      p = page + 1;\n    }\n\n    setPage(p);\n    if (p < 7) {\n      for (let i = 0; i < 10; i++) {\n        pageArray[i] = i + 1;\n      }\n    } else if (p >= finalPage) {\n      for (let i = 0; i < 10; i++) {\n        pageArray[i] = startFinalPage;\n        startFinalPage++;\n      }\n    } else {\n      let temp = 5;\n      for (let i = 0; i < 5; i++) {\n        pageArray[i] = p - temp;\n        temp--;\n      }\n      temp = 0;\n      for (let i = 5; i < 10; i++) {\n        pageArray[i] = p + temp;\n        temp++;\n      }\n    }\n  };\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        <li\n          className={classNames({\n            \"page-item disabled\": page === 1,\n            \"page-item\": page > 1,\n          })}\n        >\n          <Link\n            onClick={() => onPage(-2)}\n            to={`/games/${nameComps === \"released\" ? \"new/\" : \"\"}${page - 1}/${\n              name === undefined ? \"\" : filterUrl\n            }`}\n            className=\"arrow-pg page-link\"\n          >\n            &larr;\n          </Link>\n        </li>\n        {pageArray.map((p, idx) => (\n          <li\n            key={p}\n            className={classNames({\n              \"page-item active\": p === page,\n              \"page-item\": p !== page,\n              \"hide-display\":\n                maxPage > 6 &&\n                p !== page &&\n                idx !== 0 &&\n                idx !== 1 &&\n                idx !== 9 &&\n                idx !== 8 &&\n                idx !== maxPage - 1 &&\n                idx !== maxPage - 2,\n              \"dot-before\": idx === 1 && maxPage > 6,\n              \"dot-after\": p === page && idx > 1 && p < maxPage - 1 && maxPage > 6,\n            })}\n          >\n            <Link\n              onClick={() => onPage(p)}\n              to={`/games/${nameComps === \"released\" ? \"new/\" : \"\"}${p}/${\n                name === undefined ? \"\" : filterUrl\n              }`}\n              className=\"page-link\"\n            >\n              {p}\n              <span className=\"sr-only\"></span>\n            </Link>\n          </li>\n        ))}\n        <li\n          className={classNames({\n            \"page-item disabled\": page === maxPage,\n            \"page-item\": page >= 1,\n          })}\n        >\n          <Link\n            onClick={() => onPage(-1)}\n            to={`/games/${nameComps === \"released\" ? \"new/\" : \"\"}${page + 1}/${\n              name === undefined ? \"\" : filterUrl\n            }`}\n            className=\"arrow-pg page-link\"\n          >\n            &rarr;\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Pagination from \"../Pagination/Pagination\";\nimport \"./Items.css\";\n\nconst EachItem = ({ name, count, data, page, setPage, pageArray, nameComps }) => {\n  return (\n    <>\n      <div className=\"items-list\">\n        {data.map((game) => (\n          <Link\n            to={`/game/${game.id}/${game.name}`}\n            key={game.id}\n            className=\"text-color items-block\"\n          >\n            <div>\n              <img src={game.background_image} alt={`${game.name}`} className=\"content-img\" />\n            </div>\n            <div className=\"item-info text-overflow\">\n              <span className=\"text-overflow\">{game.name}</span>\n              <div>{new Date(game.released).toDateString().substring(4)}</div>\n            </div>\n            {game.rating !== 0 ? (\n              <div className=\"item-score\">\n                <span className=\"item-rating\">\n                  {game.rating} <i className=\"fas fa-star\"></i>\n                </span>\n              </div>\n            ) : (\n              <></>\n            )}\n          </Link>\n        ))}\n        <Pagination\n          count={count}\n          name={name}\n          page={page}\n          setPage={setPage}\n          pageArray={pageArray}\n          nameComps={nameComps}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default EachItem;\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport EachItem from \"../Items/EachItem\";\nimport \"./Filter.css\";\n\nconst FILTER_QUERY = gql`\n  query FilterQuery($num: Int!, $filter: String!) {\n    filter(num: $num, name: $filter) {\n      count\n      results {\n        id\n        name\n        released\n        background_image\n        rating\n      }\n    }\n  }\n`;\n\nconst FilterQuery = ({ num, filter, setPage, pageArray, nameComps }) => {\n  return (\n    <>\n      <h3 className=\"heading-text filter-header\">\n        Searching results: {String(filter).toUpperCase()}\n      </h3>\n      <Query query={FILTER_QUERY} variables={{ num, filter }}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4 className=\"heading-text\">Loading...</h4>;\n          if (error) {\n            console.log(error);\n            return <h4 className=\"heading-text\">No Data available</h4>;\n          } else {\n            return (\n              <EachItem\n                name={filter}\n                count={data.filter.count}\n                data={data.filter.results}\n                page={num}\n                setPage={setPage}\n                pageArray={pageArray}\n                nameComps={nameComps}\n              />\n            );\n          }\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default FilterQuery;\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport EachItem from \"./EachItem\";\nimport \"./Items.css\";\n\nconst PAGE_QUERY = gql`\n  query PageQuery($num: Int!) {\n    page(num: $num) {\n      count\n      results {\n        id\n        name\n        released\n        background_image\n        rating\n      }\n    }\n  }\n`;\n\nconst ItemsQuery = ({ num, setPage, pageArray }) => {\n  return (\n    <>\n      <h3 className=\"heading-text item-header\">All Games</h3>\n      <Query query={PAGE_QUERY} variables={{ num }}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4 className=\"heading-text\">Loading...</h4>;\n          if (error) {\n            console.log(error);\n            return <h4 className=\"heading-text\">No Data available</h4>;\n          } else {\n            let name = undefined;\n            return (\n              <EachItem\n                name={name}\n                count={data.page.count}\n                data={data.page.results}\n                page={num}\n                setPage={setPage}\n                pageArray={pageArray}\n              />\n            );\n          }\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default ItemsQuery;\n","import React from \"react\";\nimport \"./Games.css\";\n\nconst GameInfo = ({ data }) => {\n  const playStationArr = [\n    \"PlayStation 5\",\n    \"PlayStation 4\",\n    \"PlayStation 3\",\n    \"PlayStation 2\",\n    \"PlayStation\",\n  ];\n  const xboxArr = [\"Xbox One\", \"Xbox Series S/X\", \"Xbox 360\", \"Xbox\"];\n  let updatedDate = new Date(data.updated);\n  let releasedDate = new Date(data.released);\n  updatedDate = updatedDate.toLocaleString();\n  updatedDate = updatedDate.substring(0, updatedDate.indexOf(\",\"));\n  releasedDate = releasedDate.toLocaleString();\n  releasedDate = releasedDate.substring(0, releasedDate.indexOf(\",\"));\n\n  return (\n    <>\n      <h3 className=\"text-color padding-bottom\">{data.name}</h3>\n      <div className=\"row\">\n        <div className=\"col-12 col-md-5\">\n          <div className=\"img-box\">\n            <img className=\"img-fluid\" src={data.background_image} alt={`${data.name}`} />\n          </div>\n          {data.clip !== null && (\n            <div className=\"embed-responsive embed-responsive-16by9\">\n              <video className=\"embed-responsive-item\" controls>\n                <source src={data.clip.clip} type=\"video/mp4\" />\n              </video>\n              {/* <iframe className=\"embed-responsive-item\" src={data.clip.clip} allowfullscreen></iframe> */}\n            </div>\n          )}\n        </div>\n        <div className=\"col-12 col-md-7\">\n          <div className=\"info-box\">\n            <div>\n              <b className=\"heading-text\">Genres:</b>{\" \"}\n              {data.genres.map((g, idx) => (\n                <span className=\"text-color\" key={g.name}>\n                  {(idx ? \", \" : \"\") + g.name}\n                </span>\n              ))}\n            </div>\n            <div>\n              <b className=\"heading-text\">Platforms:</b>{\" \"}\n              {data.platforms.map((p, idx) => (\n                <span className=\"text-color\" key={p.platform.name}>\n                  {(idx ? \", \" : \"\") + p.platform.name}{\" \"}\n                  {p.platform.name === \"PC\" ? <i className=\"fab fa-windows\"></i> : <></>}\n                  {p.platform.name === \"macOS\" || p.platform.name === \"iOS\" ? (\n                    <i className=\"fab fa-apple\"></i>\n                  ) : (\n                    <></>\n                  )}\n                  {p.platform.name === \"Linux\" ? <i className=\"fab fa-linux\"></i> : <></>}\n                  {p.platform.name === \"Android\" ? <i className=\"fab fa-android\"></i> : <></>}\n                  {playStationArr.includes(p.platform.name) ? (\n                    <i className=\"fab fa-playstation\"></i>\n                  ) : (\n                    <></>\n                  )}\n                  {xboxArr.includes(p.platform.name) ? <i className=\"fab fa-xbox\"></i> : <></>}\n                </span>\n              ))}\n            </div>\n            <div>\n              <b className=\"heading-text\">Released:</b>{\" \"}\n              <span className=\"text-color\">\n                {releasedDate} <i className=\"far fa-calendar-alt\"></i>\n              </span>\n            </div>\n            <div>\n              <b className=\"heading-text\">Rating:</b>{\" \"}\n              <span className=\"text-color\">\n                {data.rating} <i className=\"fas fa-star\"></i>\n              </span>\n            </div>\n            <div>\n              <b className=\"heading-text\">Review count:</b>{\" \"}\n              <span className=\"text-color\">{data.reviews_count}</span>\n            </div>\n            {data.website !== \"\" && (\n              <div className=\"text-overflow\">\n                <b className=\"heading-text\">Official Website:</b>{\" \"}\n                <a className=\"link-text\" href={data.website}>\n                  {data.website}\n                </a>{\" \"}\n                <i className=\"text-color fas fa-home\"></i>\n              </div>\n            )}\n            {data.reddit_url !== \"\" && (\n              <div className=\"text-overflow\">\n                <b className=\"heading-text\">Reddit:</b>{\" \"}\n                <a className=\"link-text\" href={data.reddit_url}>\n                  {data.reddit_url}\n                </a>{\" \"}\n                <i className=\"text-color fab fa-reddit\"></i>\n              </div>\n            )}\n            <div>\n              <b className=\"heading-text\">Developers:</b>{\" \"}\n              {data.developers.map((d, idx) => (\n                <span className=\"text-color\" key={d.name}>\n                  {(idx ? \", \" : \"\") + d.name}\n                </span>\n              ))}\n            </div>\n            <div>\n              <b className=\"heading-text\">Publishers:</b>{\" \"}\n              {data.publishers.map((p, idx) => (\n                <span className=\"text-color\" key={p.name}>\n                  {(idx ? \", \" : \"\") + p.name}\n                </span>\n              ))}\n            </div>\n            <div>\n              <b className=\"heading-text\">Last Modified:</b>{\" \"}\n              <span className=\"text-color\">\n                {updatedDate} <i className=\"far fa-calendar-check\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className=\"text-color desc\">\n        <i>{data.description_raw}</i>\n      </p>\n    </>\n  );\n};\n\nexport default GameInfo;\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport GameInfo from \"./GameInfo\";\n\nconst THEGAME_QUERY = gql`\n  query TheGameQuery($queryId: Int!) {\n    game(id: $queryId) {\n      name\n      released\n      background_image\n      rating\n      reviews_count\n      description_raw\n      updated\n      website\n      reddit_url\n      developers {\n        name\n      }\n      publishers {\n        name\n      }\n      genres {\n        name\n      }\n      platforms {\n        platform {\n          name\n        }\n      }\n      clip {\n        clip\n      }\n    }\n  }\n`;\n\nconst TheGame = (props) => {\n  let queryId = parseInt(props.match.params.id);\n  return (\n    <>\n      <Query query={THEGAME_QUERY} variables={{ queryId }}>\n        {({ loading, error, data }) => {\n          if (loading) return <h4 className=\"heading-text\">Loading...</h4>;\n          if (error) {\n            console.log(error);\n            return <h4 className=\"heading-text\">No Data available</h4>;\n          } else {\n            return <GameInfo data={data.game} />;\n          }\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default TheGame;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Released.css\";\n\nconst ReleasedReview = ({ release, setRelease, data, setNameComps }) => {\n  const history = useHistory();\n\n  let sliceData = data.slice(1, 11);\n  const indicators = [];\n  for (var i = 1; i < 11; i++) {\n    indicators.push(<li key={i} data-target=\"#releasedCarousel\" data-slide-to={i}></li>);\n  }\n\n  const releasedRedir = () => {\n    setRelease(1);\n    setNameComps(\"released\");\n    // setPage(1);\n    // for (let i = 0; i < 10; i++) {\n    //   pageArray[i] = i + 1;\n    // }\n    history.push(`/games/new/1/`);\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-2\"></div>\n        <div className=\"col-8\">\n          <div>\n            <h3 className=\"heading-text\">\n              Recent Released\n              <span onClick={releasedRedir} className=\"float-right btn btn-outline-info btn-sm\">\n                Browse More\n              </span>\n            </h3>\n          </div>\n          <div id=\"releasedCarousel\" className=\"carousel slide\" data-ride=\"carousel\">\n            <ol className=\"carousel-indicators\">\n              <li data-target=\"#releasedCarousel\" data-slide-to=\"0\" className=\"active\"></li>\n              {indicators}\n            </ol>\n            <div className=\"carousel-inner\">\n              <div className=\"carousel-item active\">\n                <Link to={`/game/${data[0].id}/${data[0].name}`} key={data[0].id}>\n                  <img\n                    className=\"d-block w-100 rls-img\"\n                    src={data[0].background_image}\n                    alt={`${data[0].name}`}\n                  />\n                  <div className=\"text-color carousel-caption d-md-block\">\n                    <h5>{data[0].name}</h5>\n                  </div>\n                </Link>\n              </div>\n              {sliceData.map((game) => (\n                <div key={game.id} className=\"carousel-item\">\n                  <Link to={`/game/${game.id}/${game.name}`} key={game.id}>\n                    <img\n                      className=\"d-block w-100 rls-img\"\n                      src={game.background_image}\n                      alt={`${game.name}`}\n                    />\n                    <div className=\"text-color carousel-caption d-md-block\">\n                      <h5>{game.name}</h5>\n                    </div>\n                  </Link>\n                </div>\n              ))}\n            </div>\n            <a\n              className=\"carousel-control-prev\"\n              href=\"#releasedCarousel\"\n              role=\"button\"\n              data-slide=\"prev\"\n            >\n              <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n              <span className=\"sr-only\">Previous</span>\n            </a>\n            <a\n              className=\"carousel-control-next\"\n              href=\"#releasedCarousel\"\n              role=\"button\"\n              data-slide=\"next\"\n            >\n              <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n              <span className=\"sr-only\">Next</span>\n            </a>\n          </div>\n        </div>\n        <div className=\"col-2\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default ReleasedReview;\n","import React from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport EachItem from \"../Items/EachItem\";\nimport ReleasedReview from \"./ReleasedReview\";\n\nconst RELEASED_QUERY = gql`\n  query ReleasedQuery($from: String!, $to: String!, $num: Int!) {\n    released(dateFrom: $from, dateTo: $to, num: $num) {\n      count\n      results {\n        id\n        name\n        released\n        background_image\n        rating\n      }\n    }\n  }\n`;\n\nconst ReleasedQuery = ({\n  num,\n  release,\n  setRelease,\n  setPage,\n  pageArray,\n  nameComps,\n  setNameComps,\n}) => {\n  let today = new Date();\n  let date = today.getDate();\n  let month = today.getMonth() + 1;\n  let year = today.getFullYear();\n  month = month !== 1 ? month - 1 : month;\n  let stringMonth = String(month).padStart(2, \"0\");\n  let from = year + \"-\" + stringMonth + \"-01\"; // 2021-02-01 => starting from last month\n  month++;\n  let to = year + \"-\" + String(month).padStart(2, \"0\") + \"-\" + String(date).padStart(2, \"0\"); // up until today\n\n  return (\n    <>\n      {release === 0 ? <></> : <h3 className=\"heading-text item-header\">Recent Released</h3>}\n      <Query query={RELEASED_QUERY} variables={{ from, to, num }}>\n        {({ loading, error, data }) => {\n          if (loading) return <></>;\n          if (error) {\n            console.log(error);\n            return <h4 className=\"heading-text\">No Data available</h4>;\n          } else {\n            if (release === 0) {\n              return (\n                <ReleasedReview\n                  release={release}\n                  setRelease={setRelease}\n                  data={data.released.results}\n                  setNameComps={setNameComps}\n                />\n              );\n            } else {\n              let name = undefined;\n              return (\n                <EachItem\n                  name={name}\n                  count={data.released.count}\n                  data={data.released.results}\n                  page={num}\n                  setPage={setPage}\n                  pageArray={pageArray}\n                  nameComps={nameComps}\n                />\n              );\n            }\n          }\n        }}\n      </Query>\n    </>\n  );\n};\n\nexport default ReleasedQuery;\n","import React, { useState } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { FilterQuery, FilterForm, ItemsQuery, Navbar, TheGame, ReleasedQuery } from \"./components\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n});\n\nconst App = () => {\n  const [page, setPage] = useState(1);\n  const [filter, setFilter] = useState(\"\");\n  const [urlName, setUrlName] = useState(\"\");\n  const [pageArray] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n  const [release, setRelease] = useState(0);\n  const [nameComps, setNameComps] = useState(\"\");\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Navbar\n          setPage={setPage}\n          setFilter={setFilter}\n          setUrlName={setUrlName}\n          pageArray={pageArray}\n          setRelease={setRelease}\n          setNameComps={setNameComps}\n        />\n        <div className=\"container\">\n          <FilterForm\n            setUrlName={setUrlName}\n            pageArray={pageArray}\n            setPage={setPage}\n            filter={filter}\n            setFilter={setFilter}\n            setRelease={setRelease}\n            setNameComps={setNameComps}\n          />\n          <Switch>\n            <ReleasedQuery\n              exact\n              path={\"/\"}\n              release={release}\n              setRelease={setRelease}\n              num={page}\n              setPage={setPage}\n              pageArray={pageArray}\n              nameComps={nameComps}\n              setNameComps={setNameComps}\n            />\n            <ReleasedQuery\n              exact\n              path={`/games/new/${page}`}\n              release={release}\n              setRelease={setRelease}\n              num={page}\n              setPage={setPage}\n              pageArray={pageArray}\n              nameComps={nameComps}\n              setNameComps={setNameComps}\n            />\n            <ItemsQuery\n              exact\n              path={`/games/${page}`}\n              num={page}\n              setPage={setPage}\n              pageArray={pageArray}\n            />\n            <FilterQuery\n              path={`/games/${page}/search=${urlName}`}\n              filter={urlName}\n              num={page}\n              setPage={setPage}\n              pageArray={pageArray}\n              nameComps={nameComps}\n            />\n            <Route exact path={`/game/:id/:name`} component={TheGame} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}